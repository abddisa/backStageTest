openapi: 3.0.1
servers:
  - url: https://api.spotify.com/v1
info:
  title: Bunna Bank API
  version: 2021.4.2
  x-apisguru-categories:
    - media
  x-logo:
    url: https://logo-core.clearbit.com/spotify.com
  x-origin:
    - format: openapi
      url: https://raw.githubusercontent.com/sonallux/spotify-web-api/master/spotify-web-api-generator-open-api/spotify-web-api-openapi.yml
      version: "3.0"
  x-providerName: bunnabank.com
  x-unofficialSpec: true
externalDocs:
  description: Find more info on the official Spotify Web API Reference
  url: https://developer.spotify.com/documentation/web-api/reference
tags:
  - description: Albums API
    externalDocs:
      description: Find more info on the official Spotify Web API Reference
      url: https://developer.spotify.com/documentation/web-api/reference/#category-albums
    name: category-albums
  - description: Artists API
    externalDocs:
      description: Find more info on the official Spotify Web API Reference
      url: https://developer.spotify.com/documentation/web-api/reference/#category-artists
    name: category-artists

paths:
  /albums:
    get:
      description: Get Spotify catalog information for multiple albums identified by
        their Spotify IDs.
      externalDocs:
        description: Find more info on the official Spotify Web API Reference
        url: https://developer.spotify.com/documentation/web-api/reference/#endpoint-get-multiple-albums
      operationId: endpoint-get-multiple-albums
      parameters:
        - description: A valid user access token or your client credentials.
          in: header
          name: Authorization
          required: true
          schema:
            type: string
        - description: "A comma-separated list of the [Spotify
            IDs](https://developer.spotify.com/documentation/web-api/#spotify-u\
            ris-and-ids) for the albums. Maximum: 20 IDs."
          in: query
          name: ids
          required: true
          schema:
            type: string
        - description: An [ISO 3166-1 alpha-2 country
            code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) or the string
            from_token. Provide this parameter if you want to apply [Track
            Relinking](https://developer.spotify.com/documentation/general/guides/track-relinking-guide/).
          in: query
          name: market
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlbumsObject"
          description: >-
            On success, the HTTP status code in the response header is `200` OK
            and the response body contains an object whose key is `"albums"` and
            whose value is an array of [album
            objects](https://developer.spotify.com/documentation/web-api/reference/#object-albumobject)
            in JSON format.


            Objects are returned in the order requested. If an object is not found, a `null` value is returned in the appropriate position. Duplicate `ids` in the query will result in duplicate objects in the response. On error, the header status code is an [error code](https://developer.spotify.com/documentation/web-api/#response-status-codes) and the response body contains an [error object](https://developer.spotify.com/documentation/web-api/#response-schema).
        default:
          $ref: "#/components/responses/ErrorResponse"
      security:
        - spotify_auth: []
      summary: Get Multiple Albums
      tags:
        - category-albums
        
  "/albums/{id}":
    get:
      description: Get Spotify catalog information for a single album.
      externalDocs:
        description: Find more info on the official Spotify Web API Reference
        url: https://developer.spotify.com/documentation/web-api/reference/#endpoint-get-an-album
      operationId: endpoint-get-an-album
      parameters:
        - description: A valid user access token or your client credentials.
          in: header
          name: Authorization
          required: true
          schema:
            type: string
        - description: The Spotify ID of the album.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The market you'd like to request. Synonym for `country`.
          in: query
          name: market
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlbumObject"
          description: On success, the HTTP status code in the response header is 200 OK
            and the response body contains an album object in JSON format. On
            error, the header status code is an error code and the response body
            contains an error object.
        default:
          $ref: "#/components/responses/ErrorResponse"
      security:
        - spotify_auth: []
      summary: Get an Album
      tags:
        - category-albums
  "/albums/{id}/tracks":
    get:
      description: |-
        Get Spotify catalog information about an album's tracks.
        Optional parameters can be used to limit the number of tracks returned.
      externalDocs:
        description: Find more info on the official Spotify Web API Reference
        url: https://developer.spotify.com/documentation/web-api/reference/#endpoint-get-an-albums-tracks
      operationId: endpoint-get-an-albums-tracks
      parameters:
        - description: A valid user access token or your client credentials.
          in: header
          name: Authorization
          required: true
          schema:
            type: string
        - description: The Spotify ID of the album.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: An [ISO 3166-1 alpha-2 country
            code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) or the string
            from_token. Provide this parameter if you want to apply [Track
            Relinking](https://developer.spotify.com/documentation/general/guides/track-relinking-guide/).
          in: query
          name: market
          required: false
          schema:
            type: string
        - description: "The maximum number of tracks to return. Default: 20. Minimum: 1.
            Maximum: 50."
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
        - description: "The index of the first track to return. Default: 0 (the first
            object). Use with limit to get the next set of tracks."
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                externalDocs:
                  description: Find more info on the official Spotify Web API Reference
                  url: https://developer.spotify.com/documentation/web-api/reference/#object-pagingobject
                properties:
                  href:
                    description: A link to the Web API endpoint returning the full result of the
                      request
                    type: string
                  items:
                    description: The requested data.
                    items:
                      $ref: "#/components/schemas/SimplifiedTrackObject"
                    type: array
                  limit:
                    description: The maximum number of items in the response (as set in the query or
                      by default).
                    format: int32
                    type: integer
                  next:
                    description: URL to the next page of items. ( `null` if none)
                    type: string
                  offset:
                    description: The offset of the items returned (as set in the query or by
                      default)
                    format: int32
                    type: integer
                  previous:
                    description: URL to the previous page of items. ( `null` if none)
                    type: string
                  total:
                    description: The total number of items available to return.
                    format: int32
                    type: integer
                type: object
          description: On success, the HTTP status code in the response header is 200 OK
            and the response body contains an album object in JSON format. On
            error, the header status code is an error code and the response body
            contains an error object.
        default:
          $ref: "#/components/responses/ErrorResponse"
      security:
        - spotify_auth: []
      summary: Get an Album's Tracks

 
      
      tags:
        - category-browse
  /search:
    get:
      description: >-
        Get Spotify Catalog information about albums, artists, playlists,
        tracks, shows or episodes

        that match a keyword string.
      externalDocs:
        description: Find more info on the official Spotify Web API Reference
        url: https://developer.spotify.com/documentation/web-api/reference/#endpoint-search
      operationId: endpoint-search
      parameters:
        - description: "A valid access token from the Spotify Accounts service: see the
            [Web API Authorization
            Guide](https://developer.spotify.com/documentation/general/guides/a\
            uthorization-guide/) for details."
          in: header
          name: Authorization
          required: true
          schema:
            type: string
        - description: >-
            Search [query](#writing-a-query---guidelines) keywords and optional
            field filters and operators.   

            For example:   

            `q=roadhouse%20blues`.
          in: query
          name: q
          required: true
          schema:
            type: string
        - description: >-
            A comma-separated list of item types to search across.   

            Valid types are: `album` , `artist`, `playlist`, `track`, `show` and `episode`.   

            Search results include hits from all the specified item types.   

            For example: `q=name:abacab&type=album,track` returns both albums ***and*** tracks with "abacab" included in their name.
          in: query
          name: type
          required: true
          schema:
            type: string
        - description: >-
            An [ISO 3166-1 alpha-2 country
            code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) or the
            string `from_token`.   

            If a country code is specified, only content that is playable in that market is returned.   

            **Note** :   

            - Playlist results are not affected by the market parameter.   

            - If market is set to `from_token`, and a valid access token is specified in the request header, only content playable in the country associated with the user account, is returned.   

            - Users can view the country that is associated with their account in the [account settings](https://www.spotify.com/se/account/overview/). A user must grant access to the `user-read-private` scope prior to when the access token is issued.
          in: query
          name: market
          required: false
          schema:
            type: string
        - description: >-
            Maximum number of results to return.   

            Default: 20   

            Minimum: 1   

            Maximum: 50   

            **Note** : The limit is applied within each type, not on the total response.   

            For example, if the limit value is 3 and the type is `artist,album`, the response contains 3 artists and 3 albums.
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
        - description: |-
            The index of the first result to return.   
            Default: 0 (the first result).   
            Maximum offset (including limit): 1,000.   
            Use with limit to get the next page of search results.
          in: query
          name: offset
          required: false
          schema:
            format: int32
            type: integer
        - description: >-
            Possible values: *audio*   

            If *include_external=audio* is specified the response will include any relevant audio content that is hosted externally.   

            By default external content is filtered out from responses.
          in: query
          name: include_external
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResponseObject"
          description: >-
            **On success**:


            - In the response ***header*** the HTTP status code is `200` OK.

            - For each type provided in the `type` parameter, the response ***body*** contains an array of [artist objects](https://developer.spotify.com/documentation/web-api/reference/#object-artistobject) / [simplified album objects](https://developer.spotify.com/documentation/web-api/reference/#object-simplifiedalbumobject) / [track objects](https://developer.spotify.com/documentation/web-api/reference/#object-trackobject) / [simplified show objects](https://developer.spotify.com/documentation/web-api/reference/#object-simplifiedshowobject) / [simplified episode objects](https://developer.spotify.com/documentation/web-api/reference/#object-simplifiedepisodeobject) wrapped in a [paging object](https://developer.spotify.com/documentation/web-api/reference/#object-pagingobject) in JSON.


            **On error**:


            - The ***header*** status code is an [error code](https://developer.spotify.com/documentation/web-api/#response-status-codes).

            - The response ***body*** contains an [error object](https://developer.spotify.com/documentation/web-api/#response-schema).
        default:
          $ref: "#/components/responses/ErrorResponse"
      security:
        - spotify_auth: []
      summary: Search for an Item
    
      tags:
        - category-playlists
	  
	  
  securitySchemes:
    spotify_auth:
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.spotify.com/authorize
          scopes:
            app-remote-control: Remote control playback of Spotify. This scope is currently
              available to Spotify iOS and Android SDKs.
            playlist-modify-private: Write access to a user's private playlists.
            playlist-modify-public: Write access to a user's public playlists.
            playlist-read-collaborative: Include collaborative playlists when requesting a user's playlists.
            playlist-read-private: Read access to user's private playlists.
            streaming: Control playback of a Spotify track. This scope is currently
              available to the Web Playback SDK. The user must have a Spotify
              Premium account.
            ugc-image-upload: Write access to user-provided images.
            user-follow-modify: Write/delete access to the list of artists and other users
              that the user follows.
            user-follow-read: Read access to the list of artists and other users that the
              user follows.
            user-library-modify: Write/delete access to a user's "Your Music" library.
            user-library-read: Read access to a user's library.
            user-modify-playback-state: Write access to a user’s playback state
            user-read-currently-playing: Read access to a user’s currently playing content.
            user-read-email: Read access to user’s email address.
            user-read-playback-position: Read access to a user’s playback position in a content.
            user-read-playback-state: Read access to a user’s player state.
            user-read-private: Read access to user’s subscription details (type of user account).
            user-read-recently-played: Read access to a user’s recently played tracks.
            user-top-read: Read access to a user's top artists and tracks.
          tokenUrl: https://accounts.spotify.com/api/token
      type: oauth2
