openapi: 3.0.1
servers:
  - url: https://api.bunnabank.com/v1
info:
  title: Bunna Bank API
  version: 2021.4.2
  x-apisguru-categories:
    - media
  x-logo:
    url: https://logo-core.clearbit.com/spotify.com
  x-origin:
    - format: openapi
      url: https://raw.githubusercontent.com/sonallux/spotify-web-api/master/spotify-web-api-generator-open-api/spotify-web-api-openapi.yml
      version: "3.0"
  x-providerName: bunnabank.com
  x-unofficialSpec: true
externalDocs:
  description: Find more info on the official Spotify Web API Reference
  url: https://developer.spotify.com/documentation/web-api/reference
tags:
  - description: customer API
    externalDocs:
      description: Find more info on the official Bunna Bank Web API Reference
      url: https://developer.spotify.com/documentation/web-api/reference/#category-albums
    name: customer-detail
 

paths:
  /accounts:
    get:
      description: Get List of customer Accounts by Phone number. Retrieves a list of customer bank accounts that are registered with a given phone number.
      externalDocs:
        description: Find more info on the official Spotify Web API Reference
        url: https://developer.spotify.com/documentation/web-api/reference/#endpoint-get-multiple-albums
      operationId: endpoint-get-multiple-albums
      parameters:
        - description: A valid user access token or your client credentials.
          in: header
          name: Authorization
          required: true
          schema:
            type: string
        - description: "The phone number must be starting with +251 (Ethiopia country code), (e.g., +2510912345678)"
          in: query
          name: phoneNumber
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlbumsObject"
          description: >-
            On success, the HTTP status code in the response header is `200` OK
            and the response body contains an object whose key is `"accounts"` and
            whose value is an array of in JSON format.


            Objects are returned in the order requested. If an object is not found, a `null` value is returned in the appropriate position. Duplicate `ids` in the query will result in duplicate objects in the response. On error, the header status code is an [error code](https://developer.spotify.com/documentation/web-api/#response-status-codes) and the response body contains an [error object](https://developer.spotify.com/documentation/web-api/#response-schema).
        default:
          $ref: "#/components/responses/ErrorResponse"
      security:
        - bunnabank_auth: []
      summary: Get List of account
      tags:
        - customer-detail
        
  "/account/{phoneNo}":
    get:
      description: Get account Detail by phone number.
      externalDocs:
        description: Find more info on the official Spotify Web API Reference
        url: https://developer.spotify.com/documentation/web-api/reference/#endpoint-get-an-album
      operationId: endpoint-get-an-album
      parameters:
        - description: A valid user access token or your client credentials.
          in: header
          name: Authorization
          required: true
          schema:
            type: string
        - description: The Spotify ID of the album.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The market you'd like to request. Synonym for `country`.
          in: query
          name: market
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlbumObject"
          description: On success, the HTTP status code in the response header is 200 OK
            and the response body contains an album object in JSON format. On
            error, the header status code is an error code and the response body
            contains an error object.
        default:
          $ref: "#/components/responses/ErrorResponse"
      security:
        - bunnabank_auth: []
      summary: Get Account Detial
      tags:
        - customer-detail
		
	
components:
  responses:
    ErrorResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponseObject"
      description: Unexpected error
  schemas:
    AlbumObject:
      externalDocs:
        description: Find more info on the official Spotify Web API Reference
        url: https://developer.spotify.com/documentation/web-api/reference/#object-albumobject
      properties:
        album_type:
          description: "The type of the album: `album`, `single`, or `compilation`."
          type: string
        artists:
          description: The artists of the album. Each artist object includes a link in
            `href` to more detailed information about the artist.
          items:
            $ref: "#/components/schemas/ArtistObject"
          type: array
        available_markets:
          description: "The markets in which the album is available: [ISO 3166-1 alpha-2
            country codes](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
            Note that an album is considered available in a market when at least
            1 of its tracks is available in that market."
          items:
            type: string
          type: array
        copyrights:
          description: The copyright statements of the album.
          items:
            $ref: "#/components/schemas/CopyrightObject"
          type: array
        external_ids:
          $ref: "#/components/schemas/ExternalIdObject"
        external_urls:
          $ref: "#/components/schemas/ExternalUrlObject"
        genres:
          description: 'A list of the genres used to classify the album. For example:
            "Prog Rock" , "Post-Grunge". (If not yet classified, the array is
            empty.)'
          items:
            type: string
          type: array
        href:
          description: A link to the Web API endpoint providing full details of the album.
          type: string
        id:
          description: The Spotify ID for the album.
          type: string
        images:
          description: The cover art for the album in various sizes, widest first.
          items:
            $ref: "#/components/schemas/ImageObject"
          type: array
        label:
          description: The label for the album.
          type: string
        name:
          description: The name of the album. In case of an album takedown, the value may
            be an empty string.
          type: string
        popularity:
          description: The popularity of the album. The value will be between 0 and 100,
            with 100 being the most popular. The popularity is calculated from
            the popularity of the album's individual tracks.
          format: int32
          type: integer
        release_date:
          description: The date the album was first released, for example "1981-12-15".
            Depending on the precision, it might be shown as "1981" or
            "1981-12".
          type: string
        release_date_precision:
          description: 'The precision with which release_date value is known: "year" ,
            "month" , or "day".'
          type: string
        restrictions:
          $ref: "#/components/schemas/AlbumRestrictionObject"
        tracks:
          description: The tracks of the album.
          externalDocs:
            description: Find more info on the official Spotify Web API Reference
            url: https://developer.spotify.com/documentation/web-api/reference/#object-pagingobject
          properties:
            href:
              description: A link to the Web API endpoint returning the full result of the
                request
              type: string
            items:
              description: The requested data.
              items:
                $ref: "#/components/schemas/SimplifiedTrackObject"
              type: array
            limit:
              description: The maximum number of items in the response (as set in the query or
                by default).
              format: int32
              type: integer
            next:
              description: URL to the next page of items. ( `null` if none)
              type: string
            offset:
              description: The offset of the items returned (as set in the query or by
                default)
              format: int32
              type: integer
            previous:
              description: URL to the previous page of items. ( `null` if none)
              type: string
            total:
              description: The total number of items available to return.
              format: int32
              type: integer
          type: object
        type:
          description: 'The object type: "album"'
          type: string
        uri:
          description: The Spotify URI for the album.
          type: string
      type: object
    AlbumRestrictionObject:
      externalDocs:
        description: Find more info on the official Spotify Web API Reference
        url: https://developer.spotify.com/documentation/web-api/reference/#object-albumrestrictionobject
      properties:
        reason:
          description: >-
            The reason for the restriction. Supported values:  


            - `market` - The content item is not available in the given market.  

            - `product` - The content item is not available for the user's subscription type.  

            - `explicit` - The content item is explicit and the user's account is set to not play explicit content.  
              Additional reasons may be added in the future. **Note**: If you use this field, make sure that your application safely handles unknown values.
          type: string
      type: object
    AlbumsObject:
      properties:
        albums:
          description: ""
          items:
            $ref: "#/components/schemas/AlbumObject"
          type: array
      type: object
    ArtistObject:
      externalDocs:
        description: Find more info on the official Spotify Web API Reference
        url: https://developer.spotify.com/documentation/web-api/reference/#object-artistobject
      properties:
        external_urls:
          $ref: "#/components/schemas/ExternalUrlObject"
        followers:
          $ref: "#/components/schemas/FollowersObject"
        genres:
          description: 'A list of the genres the artist is associated with. For example:
            `"Prog Rock"` , `"Post-Grunge"`. (If not yet classified, the array
            is empty.)'
          items:
            type: string
          type: array
        href:
          description: A link to the Web API endpoint providing full details of the artist.
          type: string
        id:
          description: The [Spotify
            ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)
            for the artist.
          type: string
        images:
          description: Images of the artist in various sizes, widest first.
          items:
            $ref: "#/components/schemas/ImageObject"
          type: array
        name:
          description: The name of the artist.
          type: string
        popularity:
          description: The popularity of the artist. The value will be between 0 and 100,
            with 100 being the most popular. The artist's popularity is
            calculated from the popularity of all the artist's tracks.
          format: int32
          type: integer
        type:
          description: 'The object type: `"artist"`'
          type: string
        uri:
          description: The [Spotify
            URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)
            for the artist.
          type: string
      type: object
    ArtistsObject:
      properties:
        artists:
          description: ""
          items:
            $ref: "#/components/schemas/ArtistObject"
          type: array
      type: object
    AudioAnalysisObject:
      externalDocs:
        description: Find more info on the official Spotify Web API Reference
        url: https://developer.spotify.com/documentation/web-api/reference/tracks/get-audio-analysis/#audio-analysis-object
      properties:
        bars:
          description: The time intervals of the bars throughout the track. A bar (or
            measure) is a segment of time defined as a given number of beats.
            Bar offsets also indicate downbeats, the first beat of the measure.
          items:
            $ref: "#/components/schemas/TimeIntervalObject"
          type: array
        beats:
          description: The time intervals of beats throughout the track. A beat is the
            basic time unit of a piece of music; for example, each tick of a
            metronome. Beats are typically multiples of tatums.
          items:
            $ref: "#/components/schemas/TimeIntervalObject"
          type: array
        sections:
          description: Sections are defined by large variations in rhythm or timbre, e.g.
            chorus, verse, bridge, guitar solo, etc. Each section contains its
            own descriptions of tempo, key, mode, time_signature, and loudness.
          items:
            $ref: "#/components/schemas/SectionObject"
          type: array
        segments:
          description: Audio segments attempts to subdivide a song into many segments,
            with each segment containing a roughly consistent sound throughout
            its duration.
          items:
            $ref: "#/components/schemas/SegmentObject"
          type: array
        tatums:
          description: A tatum represents the lowest regular pulse train that a listener
            intuitively infers from the timing of perceived musical events
            (segments).
          items:
            $ref: "#/components/schemas/TimeIntervalObject"
          type: array
      type: object
  securitySchemes:
    bunnabank_auth:
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.bunnabank.com/authorize
          scopes:
            accounts-read-by-phone: Read list of user’s bank accounts (account numbers, IBANs, balances).
            accounts-read-by-phone-list: Read list of user’s bank accounts (account numbers, IBANs, balances).
            balances-read-by-phone: Read transactions for user’s accounts.   
          tokenUrl: https://accounts.bunnabank.com/api/token
      type: oauth2
